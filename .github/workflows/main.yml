
name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install Python Dependencies and Apply Migrations
      run: |
        cd image-classification-mnist/backend
        pip install -r requirements.txt
        python manage.py makemigrations
        python manage.py migrate

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 14

    - name: Install Node.js Dependencies
      run: |
        cd image-classification-mnist/frontend
        npm install

    - name: Build React Frontend
      run: |
        cd image-classification-mnist/frontend
        npm run build

    - name: Copy Files to EC2 Instance
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST_DNS }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "image-classification-mnist/backend"
        target: "${{ secrets.TARGET_DIR }}/backend"

    - name: Copy Frontend Build to EC2 Instance
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST_DNS }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "image-classification-mnist/frontend/build"
        target: "${{ secrets.TARGET_DIR }}/frontend"

    - name: Restart Django Server on EC2
      run: |
        ssh -i ${{ secrets.EC2_SSH_KEY }} ${{ secrets.USERNAME }}@${{ secrets.HOST_DNS }} "cd ${{ secrets.TARGET_DIR }}/backend && python manage.py runserver"

    - name: Restart Node.js Server on EC2
      run: |
        ssh -i ${{ secrets.EC2_SSH_KEY }} ${{ secrets.USERNAME }}@${{ secrets.HOST_DNS }} "cd ${{ secrets.TARGET_DIR }}/frontend && npm start"
